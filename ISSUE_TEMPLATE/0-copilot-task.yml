name: Copilot Development Task
description: Template for scoped development tasks suitable for GitHub Copilot Chat or Agents
title: '[Task]: '
labels: ['copilot-task', 'enhancement']
assignees: []
body:
  - type: markdown
    attributes:
      value: |
        ## ü§ñ Copilot Development Task

        Use this template to create well-scoped, atomic development tasks that can be efficiently handled by GitHub Copilot (via Chat or agent flow).

        **Guidelines:**
        - Tasks should be focused and completable within 1‚Äì4 hours
        - Include testable acceptance criteria and file-level specificity
        - Provide a link to the appropriate Copilot `role` prompt (e.g. `copilot-instructions.md`)
        - Keep the task self-contained with all required context

  - type: input
    id: role
    attributes:
      label: 'üé≠ Role Prompt File'
      description: 'Path to the markdown file that defines the Copilot‚Äôs role for this task (e.g., `prompts/dev-assistant.md`)'
      placeholder: 'prompts/frontend-specialist.md'
    validations:
      required: true

  - type: textarea
    id: context
    attributes:
      label: 'üß† Context'
      description: 'Provide background information and the problem being solved'
      placeholder: |
        What is the current situation? What problem are we trying to solve?

        Example:
        - Feature missing from current release
        - API not handling edge cases
        - Code is unscalable or redundant
      value: ''
    validations:
      required: true

  - type: textarea
    id: acceptance-criteria
    attributes:
      label: '‚úÖ Acceptance Criteria'
      description: 'List specific, testable requirements that define when this task is complete'
      placeholder: |
        1. [ ] Feature or fix works as described
        2. [ ] Related files updated
        3. [ ] Tests are written and passing
        4. [ ] Documentation is updated
        5. [ ] No regression introduced
      value: ''
    validations:
      required: true

  - type: textarea
    id: files-involved
    attributes:
      label: 'üìÅ Files Involved'
      description: 'List the files to be created, modified, or deleted'
      placeholder: |
        **New files:**
        - src/components/Widget.tsx
        - tests/widget.test.ts

        **Modified files:**
        - src/pages/Home.tsx
        - docs/features.md

        **Deleted files:**
        - src/old/utils/legacy.ts
      value: ''
    validations:
      required: true

  - type: dropdown
    id: priority
    attributes:
      label: 'üö® Priority'
      description: 'Select the priority level for this task'
      options:
        - 'Low - Nice to have'
        - 'Medium - Needed for next release'
        - 'High - Blocking other work'
        - 'Critical - Needs immediate attention'
      default: 1
    validations:
      required: true

  - type: dropdown
    id: complexity
    attributes:
      label: 'üß© Complexity'
      description: 'Estimate the level of complexity involved'
      options:
        - 'Simple - Straightforward implementation'
        - 'Medium - Some complexity or decision-making'
        - 'Complex - Requires architectural or design consideration'
      default: 0
    validations:
      required: true

  - type: input
    id: estimated-hours
    attributes:
      label: '‚è±Ô∏è Estimated Hours'
      description: 'Rough time estimate (1‚Äì4 hrs recommended)'
      placeholder: '2'
    validations:
      required: false

  - type: textarea
    id: technical-notes
    attributes:
      label: 'üîß Technical Notes'
      description: 'List technical constraints, considerations, or implementation suggestions'
      placeholder: |
        - API endpoints or SDKs
        - File structure guidance
        - Error handling or logging
        - Performance concerns
      value: ''
    validations:
      required: false

  - type: textarea
    id: dependencies
    attributes:
      label: 'üîó Dependencies'
      description: 'Mention any blocking issues, linked tickets, or external systems involved'
      placeholder: |
        - Depends on #123
        - Requires design spec from @ux-team
        - Integration with external auth provider
      value: ''
    validations:
      required: false

  - type: textarea
    id: testing-approach
    attributes:
      label: 'üß™ Testing Approach'
      description: 'Describe how this task should be tested or verified'
      placeholder: |
        - Unit or integration tests
        - Manual QA steps
        - Regression checks
        - Use case walkthroughs
      value: ''
    validations:
      required: false

  - type: checkboxes
    id: task-type
    attributes:
      label: 'üìù Task Type'
      description: 'Select all that apply'
      options:
        - label: 'New feature'
        - label: 'Bug fix'
        - label: 'Refactor'
        - label: 'Documentation'
        - label: 'Test coverage'
        - label: 'Infrastructure / DevOps'

  - type: textarea
    id: additional-notes
    attributes:
      label: 'üóíÔ∏è Additional Notes'
      description: 'Any other info to assist the developer or Copilot agent'
      placeholder: |
        - User stories or personas
        - Design links or diagrams
        - API schemas or contracts
        - Logs or console output
      value: ''
    validations:
      required: false

  - type: markdown
    attributes:
      value: |
        ---
        ## ‚úÖ Pre-submission Checklist

        - [ ] Task is atomic and completable in <4 hours
        - [ ] Acceptance criteria are clear and testable
        - [ ] File paths are defined
        - [ ] Role prompt file is linked
        - [ ] Dependencies are listed (if any)

        ## üß† Copilot Notes

        - Reference the role file in `/prompts/` to guide tone and scope.
        - Adhere to repo conventions (branching, commit format, etc.)
        - Use small, atomic commits and frequent progress checkpoints.
        - Submit PR when all criteria are met and tests pass.
